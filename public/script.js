const token = localStorage.getItem('token');
const userId = localStorage.getItem('userId');
const username = localStorage.getItem('username');

const userInfoElement = document.getElementById('userInfo');
const eventsListElement = document.getElementById('eventsList');

// ================== –í–∏–≤—ñ–¥ —ñ–º–µ–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ==================
if (userId && username) {
  userInfoElement.innerHTML = `–í—ñ—Ç–∞—î–º–æ, ${username}!`;
} else {
  userInfoElement.innerHTML = '–ë—É–¥—å –ª–∞—Å–∫–∞, —É–≤—ñ–π–¥—ñ—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É.';
}

// ================== –í–∏—Ö—ñ–¥ –∑ —Å–∏—Å—Ç–µ–º–∏ ==================
function logout() {
  localStorage.removeItem('token');
  localStorage.removeItem('userId');
  localStorage.removeItem('username');
  window.location.href = 'login.html';
}

// ================== –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ–¥—ñ–π =================
async function createEvent(e) {
  e.preventDefault();

  const title = document.getElementById('title').value;
  const location = document.getElementById('location').value;
  const time = document.getElementById('date_time').value;
  const image = document.getElementById('image').files[0];
  const creatorId = localStorage.getItem('userId');

  const formData = new FormData();
  formData.append('title', title);
  formData.append('location', location);
  formData.append('time', time);
  formData.append('creatorId', creatorId);
  if (image) {
    formData.append('image', image);
  }

  try {
    const res = await fetch('/events', {
      method: 'POST',
      body: formData
    });

    const data = await res.json();

    if (res.ok) {
      alert('–ü–æ–¥—ñ—é —Å—Ç–≤–æ—Ä–µ–Ω–æ!');
      window.location.href = '/';
    } else {
      alert(data.error || '–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ–¥—ñ—ó');
    }
  } catch (err) {
    console.error(err);
    alert('–ü–æ–º–∏–ª–∫–∞ –∑ º—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º');
  }
}

// ================== –ü–µ—Ä–µ—Ö—ñ–¥ –Ω–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ–¥—ñ–π ==================
document.getElementById('createEventBtn')?.addEventListener('click', () => {
  window.location.href = 'create.html';
});

// ================== –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–æ–¥—ñ–π ==================
async function loadEvents() {
  try {
    const response = await axios.get('http://localhost:3000/events');
    const events = response.data;

    eventsListElement.innerHTML = '';
    events.forEach(event => {
      const eventDiv = document.createElement('div');
      eventDiv.className = 'bg-black bg-opacity-60 border border-green-600 rounded-2xl p-5 shadow-lg transition hover:scale-[1.01]';

      const eventHTML = `
        ${event.image ? `<img src="${event.image}" alt="–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ–¥—ñ—ó" class="w-full h-48 object-cover rounded mb-3">` : ''}
        <h3 class="text-xl font-bold text-green-300 mb-2">‚öΩ ${event.title}</h3>
        <p class="text-white"><span class="mr-1">üìç</span> ${event.location}</p>
        <p class="text-white"><span class="mr-1">‚è∞</span> ${new Date(event.time).toLocaleString()}</p>
        <p class="text-sm text-gray-400 italic mt-1">üë§ ${event.creator_name}</p>
        <div class="mt-4 flex flex-wrap gap-2">
          <button onclick="joinEvent(${event.id})" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded">–ü—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—å</button>
          ${event.creator_name === username ? `
            <button onclick="editEvent(${event.id})" class="bg-yellow-500 hover:bg-yellow-600 text-white px-4 py-2 rounded">–†–µ–¥–∞–≥—É–≤–∞—Ç–∏</button>
            <button onclick="deleteEvent(${event.id})" class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded">–í–∏–¥–∞–ª–∏—Ç–∏</button>
          ` : ''}
        </div>
      `;

      eventDiv.innerHTML = eventHTML;
      eventsListElement.appendChild(eventDiv);
    });
  } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –ø–æ–¥—ñ–π:', error);
  }
}

// ================== –ü—Ä–∏—î–¥–Ω–∞–Ω–Ω—è –¥–æ –ø–æ–¥—ñ—ó ==================
async function joinEvent(eventId) {
  try {
    const response = await axios.post(`http://localhost:3000/events/${eventId}/join`, { userId });
    alert(response.data.message);
  } catch (error) {
    console.error('–ù–µ –≤–¥–∞–ª–æ—Å—è –ø—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è –¥–æ –ø–æ–¥—ñ—ó', error);
  }
}

// ================== –í–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ–¥—ñ—ó ==================
async function deleteEvent(eventId) {
  try {
    await axios.delete(`http://localhost:3000/events/${eventId}`);
    alert('–ü–æ–¥—ñ—é –≤–∏–¥–∞–ª–µ–Ω–æ');
    loadEvents();
  } catch (error) {
    console.error('–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–¥—ñ—é', error);
  }
}

// ================== –í—ñ–¥–∫—Ä–∏—Ç—Ç—è —Ñ–æ—Ä–º–∏ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è ==================
async function editEvent(eventId) {
  try {
    const response = await axios.get(`http://localhost:3000/events/${eventId}`);
    const event = response.data;

    document.getElementById('editEventId').value = event.id;
    document.getElementById('editTitle').value = event.title;
    document.getElementById('editLocation').value = event.location;
    document.getElementById('editTime').value = event.time;

    document.getElementById('editEventModal').classList.remove('hidden');
  } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –ø–æ–¥—ñ—ó –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è', error);
  }
}

// ================== –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–º—ñ–Ω –ø–æ–¥—ñ—ó ==================
async function saveEventChanges(e) {
  e.preventDefault();
  const eventId = document.getElementById('editEventId').value;
  const title = document.getElementById('editTitle').value;
  const location = document.getElementById('editLocation').value;
  const time = document.getElementById('editTime').value;

  try {
    await axios.put(`http://localhost:3000/events/${eventId}`, { title, location, time });
    alert('–ü–æ–¥—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–æ!');
    loadEvents();
    closeEditModal();
  } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ –ø–æ–¥—ñ—ó', error);
  }
}

// ================== –ó–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ ==================
function closeEditModal() {
  document.getElementById('editEventModal').classList.add('hidden');
}

// ================== –û–±—Ä–æ–±–∫–∞ –ø–æ–¥—ñ–π —Ñ–æ—Ä–º–∏ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è ==================
document.getElementById('editEventForm')?.addEventListener('submit', saveEventChanges);
document.getElementById('closeEditModal')?.addEventListener('click', closeEditModal);

// ================== –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –ø–æ–¥—ñ—ó –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ ==================
window.onload = loadEvents;

// üë§ –ù–∞–≤—ñ–≥–∞—Ü—ñ—è: –ø–æ–∫–∞–∑–∞—Ç–∏/—Å—Ö–æ–≤–∞—Ç–∏ –∫–Ω–æ–ø–∫–∏ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –≤—Ö–æ–¥—É
window.addEventListener('DOMContentLoaded', () => {
  const username = localStorage.getItem('username');
  if (username) {
    document.getElementById('profileLink').style.display = 'inline-block';
    document.getElementById('createLink').style.display = 'inline-block';
    document.getElementById('logoutBtn').style.display = 'inline-block';
  }
});

// üö™ –í–∏—Ö—ñ–¥
function logout() {
  localStorage.removeItem('token');
  localStorage.removeItem('userId');
  localStorage.removeItem('username');
  window.location.href = '/login';
}


// ================== –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è ==================
let token = localStorage.getItem('token');
let userId = localStorage.getItem('userId');
let username = localStorage.getItem('username');
let isAdmin = localStorage.getItem('isAdmin') === 'true';

const userInfoEl = document.getElementById('userInfo');
const eventsListEl = document.getElementById('eventsList');
const postsContainerEl = document.getElementById('postsContainer');
const messageEl = document.getElementById('message');

// –ü–æ–∫–∞–∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
if (userInfoEl) {
  userInfoEl.textContent = username ? `–í—ñ—Ç–∞—î–º–æ, ${username}!` : '–ë—É–¥—å –ª–∞—Å–∫–∞, —É–≤—ñ–π–¥—ñ—Ç—å';
}

// ================== –ù–∞–≤—ñ–≥–∞—Ü—ñ—è ==================
window.addEventListener('DOMContentLoaded', () => {
  if (username) {
    ['profileLink', 'logoutBtn'].forEach(id => document.getElementById(id)?.classList.remove('hidden'));
    if (isAdmin) {
      document.getElementById('createLink')?.classList.remove('hidden');
      document.getElementById('adminLink')?.classList.remove('hidden');
    }
  }

  // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –º—ñ–Ω—ñ–º–∞–ª—å–Ω—É –¥–∞—Ç—É –¥–ª—è datetime-local
  const dateInput = document.getElementById('date_time');
  if (dateInput) {
    dateInput.min = new Date().toISOString().slice(0, 16);
  }
});

function logout() {
  localStorage.clear();
  window.location.href = '/login';
}

// ================== –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è ==================
function showMessage(msg, type = 'info') {
  if (!messageEl) return;
  messageEl.textContent = msg;
  messageEl.className = type === 'error' ? 'text-red-500' : 'text-green-400';
  setTimeout(() => messageEl.textContent = '', 4000);
}

// ================== –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ–¥—ñ—ó ==================
async function createEvent(e) {
  e.preventDefault();
  if (!token || !isAdmin) {
    showMessage('–í–∏ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ –∞–±–æ –Ω–µ –º–∞—î—Ç–µ –ø—Ä–∞–≤ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.', 'error');
    return window.location.href = '/login';
  }

  const form = e.target;
  const formData = new FormData(form);

  try {
    const res = await axios.post('/events', formData, {
      headers: { 'Authorization': `Bearer ${token}` }
    });
    showMessage('–ü–æ–¥—ñ—é —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!');
    form.reset();
    loadEvents();
  } catch (err) {
    console.error(err);
    showMessage(err.response?.data?.error || '–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ–¥—ñ—ó', 'error');
  }
}

// ================== –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ—Å—Ç–∞ ==================
async function createPost(e) {
  e.preventDefault();
  if (!token || !isAdmin) {
    showMessage('–í–∏ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ –∞–±–æ –Ω–µ –º–∞—î—Ç–µ –ø—Ä–∞–≤ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.', 'error');
    return window.location.href = '/login';
  }

  const form = e.target;
  const formData = new FormData(form);

  try {
    const res = await axios.post('/posts', formData, {
      headers: { 'Authorization': `Bearer ${token}` }
    });
    showMessage('–ü–æ—Å—Ç —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!');
    form.reset();
    loadPosts();
  } catch (err) {
    console.error(err);
    showMessage(err.response?.data?.error || '–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ—Å—Ç–∞', 'error');
  }
}

// ================== –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–æ–¥—ñ–π ==================
async function loadEvents() {
  if (!eventsListEl) return;
  try {
    const res = await axios.get('/events', { headers: { 'Authorization': `Bearer ${token}` } });
    const events = res.data;
    eventsListEl.innerHTML = '';

    events.forEach(event => {
      const div = document.createElement('div');
      div.className = 'bg-black bg-opacity-60 border border-green-600 rounded-2xl p-5 shadow-lg transition hover:scale-[1.01]';

      div.innerHTML = `
        ${event.image ? `<img src="${event.image}" class="w-full h-48 object-cover rounded mb-3">` : ''}
        <h3 class="text-xl font-bold text-green-300 mb-2">‚öΩ ${event.title}</h3>
        <p class="text-white">üìç ${event.location}</p>
        <p class="text-white">‚è∞ ${new Date(event.time).toLocaleString()}</p>
        <p class="text-sm text-gray-400 italic">üë§ ${event.creator_name}</p>
        <div class="mt-4 flex flex-wrap gap-2">
          <button onclick="joinEvent(${event.id})" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded">–ü—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—å</button>
          ${event.creator_name?.toLowerCase() === username?.toLowerCase() ? `
            <button onclick="editEvent(${event.id})" class="bg-yellow-500 hover:bg-yellow-600 text-white px-4 py-2 rounded">–†–µ–¥–∞–≥—É–≤–∞—Ç–∏</button>
            <button onclick="deleteEvent(${event.id})" class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded">–í–∏–¥–∞–ª–∏—Ç–∏</button>
          ` : ''}
        </div>
      `;
      eventsListEl.appendChild(div);
    });
  } catch (err) {
    console.error(err);
    showMessage('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–æ–¥—ñ–π', 'error');
  }
}

// ================== –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–æ—Å—Ç—ñ–≤ ==================
async function loadPosts() {
  if (!postsContainerEl) return;
  try {
    const res = await axios.get('/posts', { headers: { 'Authorization': `Bearer ${token}` } });
    postsContainerEl.innerHTML = '';
    res.data.forEach(post => {
      const div = document.createElement('div');
      div.className = 'bg-black bg-opacity-50 rounded-xl p-5 shadow-md mb-4';
      div.innerHTML = `
        ${post.image || post.image_url ? `<img src="${post.image || post.image_url}" class="w-full max-h-96 object-cover rounded mb-4">` : ''}
        <h3 class="text-2xl font-bold text-green-300 mb-2">${post.title}</h3>
        <p class="text-white mb-2">${post.content}</p>
        <p class="text-sm text-gray-400 italic">üë§ ${post.author} | üïí ${new Date(post.created_at).toLocaleString()}</p>
      `;
      postsContainerEl.appendChild(div);
    });
  } catch (err) {
    console.error(err);
    showMessage('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–æ—Å—Ç—ñ–≤', 'error');
  }
}

// ================== –ü—Ä–∏—î–¥–Ω–∞–Ω–Ω—è ==================
async function joinEvent(eventId) {
  try {
    const res = await axios.post(`/events/${eventId}/join`, { userId }, {
      headers: { 'Authorization': `Bearer ${token}` }
    });
    showMessage(res.data.message || '–ü—Ä–∏—î–¥–Ω–∞–Ω–æ –¥–æ –ø–æ–¥—ñ—ó');
  } catch (err) {
    console.error(err);
    showMessage('–ù–µ –≤–¥–∞–ª–æ—Å—è –ø—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è', 'error');
  }
}

// ================== –í–∏–¥–∞–ª–µ–Ω–Ω—è ==================
async function deleteEvent(eventId) {
  try {
    await axios.delete(`/events/${eventId}`, { headers: { 'Authorization': `Bearer ${token}` } });
    showMessage('–ü–æ–¥—ñ—é –≤–∏–¥–∞–ª–µ–Ω–æ');
    loadEvents();
  } catch (err) {
    console.error(err);
    showMessage('–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–¥—ñ—é', 'error');
  }
}

// ================== –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è ==================
async function editEvent(eventId) {
  try {
    const res = await axios.get(`/events/${eventId}`, { headers: { 'Authorization': `Bearer ${token}` } });
    const event = res.data;

    document.getElementById('editEventId').value = event.id;
    document.getElementById('editTitle').value = event.title;
    document.getElementById('editLocation').value = event.location;
    document.getElementById('editTime').value = new Date(event.time).toISOString().slice(0, 16);
    document.getElementById('editEventModal')?.classList.remove('hidden');
  } catch (err) {
    console.error(err);
    showMessage('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –ø–æ–¥—ñ—é –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è', 'error');
  }
}

async function saveEventChanges(e) {
  e.preventDefault();
  const id = document.getElementById('editEventId').value;
  const title = document.getElementById('editTitle').value;
  const location = document.getElementById('editLocation').value;
  const time = document.getElementById('editTime').value;

  try {
    await axios.put(`/events/${id}`, { title, location, time }, {
      headers: { 'Authorization': `Bearer ${token}` }
    });
    showMessage('–ü–æ–¥—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–æ');
    closeEditModal();
    loadEvents();
  } catch (err) {
    console.error(err);
    showMessage('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–æ–¥—ñ—ó', 'error');
  }
}

function closeEditModal() {
  document.getElementById('editEventModal')?.classList.add('hidden');
}

// ================== –ü–æ–¥—ñ—ó ==================
document.getElementById('createForm')?.addEventListener('submit', createEvent);
document.getElementById('postForm')?.addEventListener('submit', createPost);
document.getElementById('editEventForm')?.addEventListener('submit', saveEventChanges);
document.getElementById('closeEditModal')?.addEventListener('click', closeEditModal);

// ================== –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ ==================
window.onload = () => {
  loadEvents();
  loadPosts();
};

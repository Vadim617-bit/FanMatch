const express = require('express');
const bcrypt = require('bcryptjs');
const jwt = require('jsonwebtoken');
const db = require('../db/database');
const router = express.Router();

const SECRET_KEY = 'supersecret123'; // –∫—Ä–∞—â–µ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –≤ .env

// üîπ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è
router.post('/register', (req, res) => {
  const { name, email, password, favorite_team, location } = req.body;
  if (!name || !email || !password) return res.status(400).json({ error: '–í—Å—ñ –ø–æ–ª—è –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤—ñ' });

  const hashedPassword = bcrypt.hashSync(password, 10);

  const query = `INSERT INTO users (name, email, password_hash, favorite_team, location) VALUES (?, ?, ?, ?, ?)`;
  db.run(query, [name, email, hashedPassword, favorite_team, location], function (err) {
    if (err) return res.status(500).json({ error: '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —É–∂–µ —ñ—Å–Ω—É—î –∞–±–æ –ø–æ–º–∏–ª–∫–∞' });

    const token = jwt.sign({ userId: this.lastID }, SECRET_KEY, { expiresIn: '7d' });
    res.json({ token, userId: this.lastID });
  });
});

// üîπ –õ–æ–≥—ñ–Ω
router.post('/login', (req, res) => {
  const { email, password } = req.body;
  if (!email || !password) return res.status(400).json({ error: 'Email —Ç–∞ –ø–∞—Ä–æ–ª—å –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤—ñ' });

  db.get(`SELECT * FROM users WHERE email = ?`, [email], (err, user) => {
    if (err || !user) return res.status(400).json({ error: '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ' });

    const valid = bcrypt.compareSync(password, user.password_hash);
    if (!valid) return res.status(401).json({ error: '–ù–µ–≤—ñ—Ä–Ω–∏–π –ø–∞—Ä–æ–ª—å' });

    const token = jwt.sign({ userId: user.id }, SECRET_KEY, { expiresIn: '7d' });
    res.json({ token, userId: user.id });
  });
});

module.exports = router;
